# load value 0x13 into register 1
LI,0x3 0x5      # 0x40
LI,0x1 0x13     # 0x44
LI,0x2 0x13     # 0x48
# load negative value from register 2
# r1 = ~r2 + 1 = -19
LNR,0x1 0x2     # 0x4c
# print value from register 1 (address 0x8)
SVC,0x3 0x4,0   # 0x4e | -19
SVC,0x3 0x8,0   # 0x52 |  19
SWAPR,0x1 0x2   # 0x56
SVC,0x3 0x4,0   # 0x58 |  19
SVC,0x3 0x8,0   # 0x5c | -19

# do-while loop:
#   
#   i = 5
#   do {
#       print(i)
#       i -= 1
#   } while (i != 0)
#
LI,0x5 0x5      # 0x60
LI,0x4 0x68     # 0x64
# store value from r1 at address 0xf0 = 240(10)
ST,0x5 0xf0,0   # 0x68
# print value at address 0xf0 (5)
SVC,0x3 0xf0,0  # 0x6c
# subtract 1 from value at 0x1
SI,0x5 1        # 0x70
# if a value is non-zero, jump to address stored
# in r3, i.e. 0x50
BCRR,0x1 0x4    # 0x72
# r6 = 89
LI,0x6 0x59     # 0x76  0x59(16) = 89(10)
# print r6 == 89
SVC,0x3 0x12,0  # 0x7a  0x18(16) = 24(10)
# if 89 > 0:
#     r7 = 0b11...1
SACR,0x4 0x7    # 0x7e
SVC,0x3 0x1c,0  # 0x82
